---
- name: Include OS family specific variables
  include_vars: "{{ ansible_os_family }}.yml"

- name: Create the zeppelin group
  group:
    name: zeppelin
    state: present
    system: yes

- name: Create the zeppelin user
  user:
    name: zeppelin
    groups: zeppelin
    append: yes
    shell: /bin/bash

- name: Download and install the required packages (yum)
  yum:
    name: "{{ item }}"
    state: present
  with_items: "{{ zeppelin_packages }}"
  when: ansible_os_family == "RedHat"

- name: Download and install the required packages (apt)
  apt:
    name: "{{ item }}"
    state: present
  with_items: "{{ zeppelin_packages }}"
  when: ansible_os_family == "Debian"

#
# Install Zeppelin
#
- name: Check if the version of Zeppelin already exists
  stat:
    path: "/opt/zeppelin-{{ zeppelin_version }}-bin-all"
  register: zeppelin_install_path

- name: Download Zeppelin
  get_url:
    url: "{{ zeppelin_download_url }}"
    dest: "/tmp/zeppelin-{{ zeppelin_version }}.tgz"
  when: zeppelin_install_path.stat.exists == False

- name: Extract Zeppelin into the install directory
  unarchive:
    src: "/tmp/zeppelin-{{ zeppelin_version }}.tgz"
    dest: "/opt/"
    copy: no
    owner: zeppelin
    group: zeppelin
  when: zeppelin_install_path.stat.exists == False

- name: Create a symlink for /opt/zeppelin
  file:
    src: "/opt/zeppelin-{{ zeppelin_version }}-bin-all"
    dest: /opt/zeppelin
    owner: zeppelin
    group: zeppelin
    state: link
  when: zeppelin_install_path.stat.exists == False

- name: Create the Zeppelin Site config file
  template:
    src: zeppelin-site.xml.j2
    dest: /opt/zeppelin/conf/zeppelin-site.xml
    owner: zeppelin
    group: zeppelin
    mode: 0644
  notify: restart zeppelin

- name: Create the Zeppelin ENV config file
  template:
    src: zeppelin-env.sh.j2
    dest: /opt/zeppelin/conf/zeppelin-env.sh
    owner: zeppelin
    group: zeppelin
    mode: 0644
  notify: restart zeppelin

# In order to prevent the "restart zeppelin" handler from running when the "service" tag is skipped, set the
# service_control fact to False and only set the service_control fact to True if the "service" tag isn't skipped.
# In the handler yaml, only run the task when service_control is True.
- name: Set the service_control fact to False
  set_fact: service_control=False

- name: Change the service_control fact to True
  set_fact: service_control=True
  tags:
     - service

- name: Copy the Zeppelin systemd service file
  copy:
    src: "{{ role_path }}/files/zeppelin.service"
    dest: /etc/systemd/system/zeppelin.service
    owner: zeppelin
    group: zeppelin
    mode: 0644
  tags:
    - service

- name: Ensure Zeppelin is started and enabled on boot
  service:
    name: zeppelin
    state: started
    enabled: yes
  tags:
     - service
